// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: github.com/dipdup-io/starknet-indexer/pkg/grpc/proto/entity_filters.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invokes        []*InvokeFilters        `protobuf:"bytes,1,rep,name=invokes,proto3" json:"invokes,omitempty"`
	Declares       []*DeclareFilters       `protobuf:"bytes,2,rep,name=declares,proto3" json:"declares,omitempty"`
	Deploys        []*DeployFilters        `protobuf:"bytes,3,rep,name=deploys,proto3" json:"deploys,omitempty"`
	DeployAccounts []*DeployAccountFilters `protobuf:"bytes,4,rep,name=deploy_accounts,json=deployAccounts,proto3" json:"deploy_accounts,omitempty"`
	L1Handlers     []*L1HandlerFilter      `protobuf:"bytes,5,rep,name=l1_handlers,json=l1Handlers,proto3" json:"l1_handlers,omitempty"`
	Internals      []*InternalFilter       `protobuf:"bytes,6,rep,name=internals,proto3" json:"internals,omitempty"`
	Fees           []*FeeFilter            `protobuf:"bytes,7,rep,name=fees,proto3" json:"fees,omitempty"`
}

func (x *TxRequest) Reset() {
	*x = TxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRequest) ProtoMessage() {}

func (x *TxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRequest.ProtoReflect.Descriptor instead.
func (*TxRequest) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{0}
}

func (x *TxRequest) GetInvokes() []*InvokeFilters {
	if x != nil {
		return x.Invokes
	}
	return nil
}

func (x *TxRequest) GetDeclares() []*DeclareFilters {
	if x != nil {
		return x.Declares
	}
	return nil
}

func (x *TxRequest) GetDeploys() []*DeployFilters {
	if x != nil {
		return x.Deploys
	}
	return nil
}

func (x *TxRequest) GetDeployAccounts() []*DeployAccountFilters {
	if x != nil {
		return x.DeployAccounts
	}
	return nil
}

func (x *TxRequest) GetL1Handlers() []*L1HandlerFilter {
	if x != nil {
		return x.L1Handlers
	}
	return nil
}

func (x *TxRequest) GetInternals() []*InternalFilter {
	if x != nil {
		return x.Internals
	}
	return nil
}

func (x *TxRequest) GetFees() []*FeeFilter {
	if x != nil {
		return x.Fees
	}
	return nil
}

type InvokeFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height     *IntegerFilter  `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Time       *TimeFilter     `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Status     *EnumFilter     `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Version    *EnumFilter     `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Contract   *StringFilter   `protobuf:"bytes,5,opt,name=contract,proto3" json:"contract,omitempty"`
	Selector   *EqualityFilter `protobuf:"bytes,6,opt,name=selector,proto3" json:"selector,omitempty"`
	Entrypoint *StringFilter   `protobuf:"bytes,7,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
}

func (x *InvokeFilters) Reset() {
	*x = InvokeFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFilters) ProtoMessage() {}

func (x *InvokeFilters) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFilters.ProtoReflect.Descriptor instead.
func (*InvokeFilters) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{1}
}

func (x *InvokeFilters) GetHeight() *IntegerFilter {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *InvokeFilters) GetTime() *TimeFilter {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *InvokeFilters) GetStatus() *EnumFilter {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *InvokeFilters) GetVersion() *EnumFilter {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *InvokeFilters) GetContract() *StringFilter {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *InvokeFilters) GetSelector() *EqualityFilter {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *InvokeFilters) GetEntrypoint() *StringFilter {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

type DeclareFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height  *IntegerFilter `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Time    *TimeFilter    `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Status  *EnumFilter    `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Version *EnumFilter    `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeclareFilters) Reset() {
	*x = DeclareFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclareFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclareFilters) ProtoMessage() {}

func (x *DeclareFilters) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclareFilters.ProtoReflect.Descriptor instead.
func (*DeclareFilters) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{2}
}

func (x *DeclareFilters) GetHeight() *IntegerFilter {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *DeclareFilters) GetTime() *TimeFilter {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *DeclareFilters) GetStatus() *EnumFilter {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DeclareFilters) GetVersion() *EnumFilter {
	if x != nil {
		return x.Version
	}
	return nil
}

type DeployFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height  *IntegerFilter `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Time    *TimeFilter    `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Status  *EnumFilter    `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Version *EnumFilter    `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Class   *StringFilter  `protobuf:"bytes,5,opt,name=class,proto3" json:"class,omitempty"`
}

func (x *DeployFilters) Reset() {
	*x = DeployFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployFilters) ProtoMessage() {}

func (x *DeployFilters) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployFilters.ProtoReflect.Descriptor instead.
func (*DeployFilters) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{3}
}

func (x *DeployFilters) GetHeight() *IntegerFilter {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *DeployFilters) GetTime() *TimeFilter {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *DeployFilters) GetStatus() *EnumFilter {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DeployFilters) GetVersion() *EnumFilter {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *DeployFilters) GetClass() *StringFilter {
	if x != nil {
		return x.Class
	}
	return nil
}

type DeployAccountFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height  *IntegerFilter `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Time    *TimeFilter    `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Status  *EnumFilter    `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Version *EnumFilter    `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Class   *StringFilter  `protobuf:"bytes,5,opt,name=class,proto3" json:"class,omitempty"`
}

func (x *DeployAccountFilters) Reset() {
	*x = DeployAccountFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployAccountFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployAccountFilters) ProtoMessage() {}

func (x *DeployAccountFilters) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployAccountFilters.ProtoReflect.Descriptor instead.
func (*DeployAccountFilters) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{4}
}

func (x *DeployAccountFilters) GetHeight() *IntegerFilter {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *DeployAccountFilters) GetTime() *TimeFilter {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *DeployAccountFilters) GetStatus() *EnumFilter {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DeployAccountFilters) GetVersion() *EnumFilter {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *DeployAccountFilters) GetClass() *StringFilter {
	if x != nil {
		return x.Class
	}
	return nil
}

type L1HandlerFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height     *IntegerFilter  `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Time       *TimeFilter     `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Status     *EnumFilter     `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Contract   *StringFilter   `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
	Selector   *EqualityFilter `protobuf:"bytes,5,opt,name=selector,proto3" json:"selector,omitempty"`
	Entrypoint *StringFilter   `protobuf:"bytes,6,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
}

func (x *L1HandlerFilter) Reset() {
	*x = L1HandlerFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L1HandlerFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L1HandlerFilter) ProtoMessage() {}

func (x *L1HandlerFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L1HandlerFilter.ProtoReflect.Descriptor instead.
func (*L1HandlerFilter) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{5}
}

func (x *L1HandlerFilter) GetHeight() *IntegerFilter {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *L1HandlerFilter) GetTime() *TimeFilter {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *L1HandlerFilter) GetStatus() *EnumFilter {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *L1HandlerFilter) GetContract() *StringFilter {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *L1HandlerFilter) GetSelector() *EqualityFilter {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *L1HandlerFilter) GetEntrypoint() *StringFilter {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

type InternalFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height         *IntegerFilter  `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Time           *TimeFilter     `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Status         *EnumFilter     `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Contract       *StringFilter   `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
	Caller         *StringFilter   `protobuf:"bytes,5,opt,name=caller,proto3" json:"caller,omitempty"`
	Class          *StringFilter   `protobuf:"bytes,6,opt,name=class,proto3" json:"class,omitempty"`
	Selector       *EqualityFilter `protobuf:"bytes,7,opt,name=selector,proto3" json:"selector,omitempty"`
	Entrypoint     *StringFilter   `protobuf:"bytes,8,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	EntrypointType *EnumFilter     `protobuf:"bytes,9,opt,name=entrypoint_type,json=entrypointType,proto3" json:"entrypoint_type,omitempty"`
	CallType       *EnumFilter     `protobuf:"bytes,10,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
}

func (x *InternalFilter) Reset() {
	*x = InternalFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalFilter) ProtoMessage() {}

func (x *InternalFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalFilter.ProtoReflect.Descriptor instead.
func (*InternalFilter) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{6}
}

func (x *InternalFilter) GetHeight() *IntegerFilter {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *InternalFilter) GetTime() *TimeFilter {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *InternalFilter) GetStatus() *EnumFilter {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *InternalFilter) GetContract() *StringFilter {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *InternalFilter) GetCaller() *StringFilter {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *InternalFilter) GetClass() *StringFilter {
	if x != nil {
		return x.Class
	}
	return nil
}

func (x *InternalFilter) GetSelector() *EqualityFilter {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *InternalFilter) GetEntrypoint() *StringFilter {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *InternalFilter) GetEntrypointType() *EnumFilter {
	if x != nil {
		return x.EntrypointType
	}
	return nil
}

func (x *InternalFilter) GetCallType() *EnumFilter {
	if x != nil {
		return x.CallType
	}
	return nil
}

type FeeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height         *IntegerFilter  `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Time           *TimeFilter     `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Status         *EnumFilter     `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Contract       *StringFilter   `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
	Caller         *StringFilter   `protobuf:"bytes,5,opt,name=caller,proto3" json:"caller,omitempty"`
	Class          *StringFilter   `protobuf:"bytes,6,opt,name=class,proto3" json:"class,omitempty"`
	Selector       *EqualityFilter `protobuf:"bytes,7,opt,name=selector,proto3" json:"selector,omitempty"`
	Entrypoint     *StringFilter   `protobuf:"bytes,8,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	EntrypointType *EnumFilter     `protobuf:"bytes,9,opt,name=entrypoint_type,json=entrypointType,proto3" json:"entrypoint_type,omitempty"`
	CallType       *EnumFilter     `protobuf:"bytes,10,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`
}

func (x *FeeFilter) Reset() {
	*x = FeeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeFilter) ProtoMessage() {}

func (x *FeeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeFilter.ProtoReflect.Descriptor instead.
func (*FeeFilter) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{7}
}

func (x *FeeFilter) GetHeight() *IntegerFilter {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *FeeFilter) GetTime() *TimeFilter {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *FeeFilter) GetStatus() *EnumFilter {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *FeeFilter) GetContract() *StringFilter {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *FeeFilter) GetCaller() *StringFilter {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *FeeFilter) GetClass() *StringFilter {
	if x != nil {
		return x.Class
	}
	return nil
}

func (x *FeeFilter) GetSelector() *EqualityFilter {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *FeeFilter) GetEntrypoint() *StringFilter {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *FeeFilter) GetEntrypointType() *EnumFilter {
	if x != nil {
		return x.EntrypointType
	}
	return nil
}

func (x *FeeFilter) GetCallType() *EnumFilter {
	if x != nil {
		return x.CallType
	}
	return nil
}

type EventFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height   *IntegerFilter  `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Time     *TimeFilter     `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Contract *StringFilter   `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	From     *StringFilter   `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	Name     *EqualityFilter `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EventFilter) Reset() {
	*x = EventFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventFilter) ProtoMessage() {}

func (x *EventFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventFilter.ProtoReflect.Descriptor instead.
func (*EventFilter) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{8}
}

func (x *EventFilter) GetHeight() *IntegerFilter {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *EventFilter) GetTime() *TimeFilter {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *EventFilter) GetContract() *StringFilter {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *EventFilter) GetFrom() *StringFilter {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *EventFilter) GetName() *EqualityFilter {
	if x != nil {
		return x.Name
	}
	return nil
}

type MessageFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height   *IntegerFilter  `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Time     *TimeFilter     `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Contract *StringFilter   `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	From     *StringFilter   `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To       *StringFilter   `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	Selector *EqualityFilter `protobuf:"bytes,6,opt,name=selector,proto3" json:"selector,omitempty"`
}

func (x *MessageFilter) Reset() {
	*x = MessageFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageFilter) ProtoMessage() {}

func (x *MessageFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageFilter.ProtoReflect.Descriptor instead.
func (*MessageFilter) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{9}
}

func (x *MessageFilter) GetHeight() *IntegerFilter {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *MessageFilter) GetTime() *TimeFilter {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *MessageFilter) GetContract() *StringFilter {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *MessageFilter) GetFrom() *StringFilter {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *MessageFilter) GetTo() *StringFilter {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *MessageFilter) GetSelector() *EqualityFilter {
	if x != nil {
		return x.Selector
	}
	return nil
}

type TransferFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height   *IntegerFilter  `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Time     *TimeFilter     `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Contract *StringFilter   `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	From     *StringFilter   `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To       *StringFilter   `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	TokenId  *InternalFilter `protobuf:"bytes,6,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *TransferFilter) Reset() {
	*x = TransferFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferFilter) ProtoMessage() {}

func (x *TransferFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferFilter.ProtoReflect.Descriptor instead.
func (*TransferFilter) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{10}
}

func (x *TransferFilter) GetHeight() *IntegerFilter {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *TransferFilter) GetTime() *TimeFilter {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *TransferFilter) GetContract() *StringFilter {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *TransferFilter) GetFrom() *StringFilter {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TransferFilter) GetTo() *StringFilter {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TransferFilter) GetTokenId() *InternalFilter {
	if x != nil {
		return x.TokenId
	}
	return nil
}

type StorageDiffFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height   *IntegerFilter  `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Contract *StringFilter   `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	Key      *EqualityFilter `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *StorageDiffFilter) Reset() {
	*x = StorageDiffFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageDiffFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageDiffFilter) ProtoMessage() {}

func (x *StorageDiffFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageDiffFilter.ProtoReflect.Descriptor instead.
func (*StorageDiffFilter) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{11}
}

func (x *StorageDiffFilter) GetHeight() *IntegerFilter {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *StorageDiffFilter) GetContract() *StringFilter {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *StorageDiffFilter) GetKey() *EqualityFilter {
	if x != nil {
		return x.Key
	}
	return nil
}

type TokenBalanceFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner    *StringFilter   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Contract *StringFilter   `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	TokenId  *InternalFilter `protobuf:"bytes,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *TokenBalanceFilter) Reset() {
	*x = TokenBalanceFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenBalanceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenBalanceFilter) ProtoMessage() {}

func (x *TokenBalanceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenBalanceFilter.ProtoReflect.Descriptor instead.
func (*TokenBalanceFilter) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP(), []int{12}
}

func (x *TokenBalanceFilter) GetOwner() *StringFilter {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *TokenBalanceFilter) GetContract() *StringFilter {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *TokenBalanceFilter) GetTokenId() *InternalFilter {
	if x != nil {
		return x.TokenId
	}
	return nil
}

var File_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto protoreflect.FileDescriptor

var file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDesc = []byte{
	0x0a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x70,
	0x64, 0x75, 0x70, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2d,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x69, 0x70, 0x64, 0x75, 0x70, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65,
	0x74, 0x2d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf8, 0x02, 0x0a, 0x09, 0x54, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x76, 0x6f, 0x6b, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x76,
	0x6f, 0x6b, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x08, 0x64,
	0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x73, 0x12, 0x44, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x37, 0x0a,
	0x0b, 0x6c, 0x31, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x31, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x6c, 0x31, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x66,
	0x65, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x65, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x66, 0x65, 0x65,
	0x73, 0x22, 0xd5, 0x02, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x0e, 0x44, 0x65,
	0x63, 0x6c, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe7, 0x01, 0x0a, 0x0d, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x22, 0xee, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x22, 0xaa, 0x02, 0x0a, 0x0f, 0x4c, 0x31, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x0a,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x22, 0xed, 0x03, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x31, 0x0a,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x33, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2e, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xe8, 0x03, 0x0a, 0x09, 0x46, 0x65, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x2c, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x2b, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x3a, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0e, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x09,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe7, 0x01, 0x0a,
	0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x29, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x27,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x23, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x31, 0x0a, 0x08,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22,
	0x96, 0x02, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x25, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x23, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x30, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x44, 0x69, 0x66, 0x66, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2c,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2f, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x27, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xa2, 0x01, 0x0a, 0x12, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x42, 0x33, 0x5a, 0x31, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x70, 0x64, 0x75, 0x70,
	0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2d, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescOnce sync.Once
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescData = file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDesc
)

func file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescGZIP() []byte {
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescOnce.Do(func() {
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescData)
	})
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDescData
}

var file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_goTypes = []interface{}{
	(*TxRequest)(nil),            // 0: proto.TxRequest
	(*InvokeFilters)(nil),        // 1: proto.InvokeFilters
	(*DeclareFilters)(nil),       // 2: proto.DeclareFilters
	(*DeployFilters)(nil),        // 3: proto.DeployFilters
	(*DeployAccountFilters)(nil), // 4: proto.DeployAccountFilters
	(*L1HandlerFilter)(nil),      // 5: proto.L1HandlerFilter
	(*InternalFilter)(nil),       // 6: proto.InternalFilter
	(*FeeFilter)(nil),            // 7: proto.FeeFilter
	(*EventFilter)(nil),          // 8: proto.EventFilter
	(*MessageFilter)(nil),        // 9: proto.MessageFilter
	(*TransferFilter)(nil),       // 10: proto.TransferFilter
	(*StorageDiffFilter)(nil),    // 11: proto.StorageDiffFilter
	(*TokenBalanceFilter)(nil),   // 12: proto.TokenBalanceFilter
	(*IntegerFilter)(nil),        // 13: proto.IntegerFilter
	(*TimeFilter)(nil),           // 14: proto.TimeFilter
	(*EnumFilter)(nil),           // 15: proto.EnumFilter
	(*StringFilter)(nil),         // 16: proto.StringFilter
	(*EqualityFilter)(nil),       // 17: proto.EqualityFilter
}
var file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_depIdxs = []int32{
	1,  // 0: proto.TxRequest.invokes:type_name -> proto.InvokeFilters
	2,  // 1: proto.TxRequest.declares:type_name -> proto.DeclareFilters
	3,  // 2: proto.TxRequest.deploys:type_name -> proto.DeployFilters
	4,  // 3: proto.TxRequest.deploy_accounts:type_name -> proto.DeployAccountFilters
	5,  // 4: proto.TxRequest.l1_handlers:type_name -> proto.L1HandlerFilter
	6,  // 5: proto.TxRequest.internals:type_name -> proto.InternalFilter
	7,  // 6: proto.TxRequest.fees:type_name -> proto.FeeFilter
	13, // 7: proto.InvokeFilters.height:type_name -> proto.IntegerFilter
	14, // 8: proto.InvokeFilters.time:type_name -> proto.TimeFilter
	15, // 9: proto.InvokeFilters.status:type_name -> proto.EnumFilter
	15, // 10: proto.InvokeFilters.version:type_name -> proto.EnumFilter
	16, // 11: proto.InvokeFilters.contract:type_name -> proto.StringFilter
	17, // 12: proto.InvokeFilters.selector:type_name -> proto.EqualityFilter
	16, // 13: proto.InvokeFilters.entrypoint:type_name -> proto.StringFilter
	13, // 14: proto.DeclareFilters.height:type_name -> proto.IntegerFilter
	14, // 15: proto.DeclareFilters.time:type_name -> proto.TimeFilter
	15, // 16: proto.DeclareFilters.status:type_name -> proto.EnumFilter
	15, // 17: proto.DeclareFilters.version:type_name -> proto.EnumFilter
	13, // 18: proto.DeployFilters.height:type_name -> proto.IntegerFilter
	14, // 19: proto.DeployFilters.time:type_name -> proto.TimeFilter
	15, // 20: proto.DeployFilters.status:type_name -> proto.EnumFilter
	15, // 21: proto.DeployFilters.version:type_name -> proto.EnumFilter
	16, // 22: proto.DeployFilters.class:type_name -> proto.StringFilter
	13, // 23: proto.DeployAccountFilters.height:type_name -> proto.IntegerFilter
	14, // 24: proto.DeployAccountFilters.time:type_name -> proto.TimeFilter
	15, // 25: proto.DeployAccountFilters.status:type_name -> proto.EnumFilter
	15, // 26: proto.DeployAccountFilters.version:type_name -> proto.EnumFilter
	16, // 27: proto.DeployAccountFilters.class:type_name -> proto.StringFilter
	13, // 28: proto.L1HandlerFilter.height:type_name -> proto.IntegerFilter
	14, // 29: proto.L1HandlerFilter.time:type_name -> proto.TimeFilter
	15, // 30: proto.L1HandlerFilter.status:type_name -> proto.EnumFilter
	16, // 31: proto.L1HandlerFilter.contract:type_name -> proto.StringFilter
	17, // 32: proto.L1HandlerFilter.selector:type_name -> proto.EqualityFilter
	16, // 33: proto.L1HandlerFilter.entrypoint:type_name -> proto.StringFilter
	13, // 34: proto.InternalFilter.height:type_name -> proto.IntegerFilter
	14, // 35: proto.InternalFilter.time:type_name -> proto.TimeFilter
	15, // 36: proto.InternalFilter.status:type_name -> proto.EnumFilter
	16, // 37: proto.InternalFilter.contract:type_name -> proto.StringFilter
	16, // 38: proto.InternalFilter.caller:type_name -> proto.StringFilter
	16, // 39: proto.InternalFilter.class:type_name -> proto.StringFilter
	17, // 40: proto.InternalFilter.selector:type_name -> proto.EqualityFilter
	16, // 41: proto.InternalFilter.entrypoint:type_name -> proto.StringFilter
	15, // 42: proto.InternalFilter.entrypoint_type:type_name -> proto.EnumFilter
	15, // 43: proto.InternalFilter.call_type:type_name -> proto.EnumFilter
	13, // 44: proto.FeeFilter.height:type_name -> proto.IntegerFilter
	14, // 45: proto.FeeFilter.time:type_name -> proto.TimeFilter
	15, // 46: proto.FeeFilter.status:type_name -> proto.EnumFilter
	16, // 47: proto.FeeFilter.contract:type_name -> proto.StringFilter
	16, // 48: proto.FeeFilter.caller:type_name -> proto.StringFilter
	16, // 49: proto.FeeFilter.class:type_name -> proto.StringFilter
	17, // 50: proto.FeeFilter.selector:type_name -> proto.EqualityFilter
	16, // 51: proto.FeeFilter.entrypoint:type_name -> proto.StringFilter
	15, // 52: proto.FeeFilter.entrypoint_type:type_name -> proto.EnumFilter
	15, // 53: proto.FeeFilter.call_type:type_name -> proto.EnumFilter
	13, // 54: proto.EventFilter.height:type_name -> proto.IntegerFilter
	14, // 55: proto.EventFilter.time:type_name -> proto.TimeFilter
	16, // 56: proto.EventFilter.contract:type_name -> proto.StringFilter
	16, // 57: proto.EventFilter.from:type_name -> proto.StringFilter
	17, // 58: proto.EventFilter.name:type_name -> proto.EqualityFilter
	13, // 59: proto.MessageFilter.height:type_name -> proto.IntegerFilter
	14, // 60: proto.MessageFilter.time:type_name -> proto.TimeFilter
	16, // 61: proto.MessageFilter.contract:type_name -> proto.StringFilter
	16, // 62: proto.MessageFilter.from:type_name -> proto.StringFilter
	16, // 63: proto.MessageFilter.to:type_name -> proto.StringFilter
	17, // 64: proto.MessageFilter.selector:type_name -> proto.EqualityFilter
	13, // 65: proto.TransferFilter.height:type_name -> proto.IntegerFilter
	14, // 66: proto.TransferFilter.time:type_name -> proto.TimeFilter
	16, // 67: proto.TransferFilter.contract:type_name -> proto.StringFilter
	16, // 68: proto.TransferFilter.from:type_name -> proto.StringFilter
	16, // 69: proto.TransferFilter.to:type_name -> proto.StringFilter
	6,  // 70: proto.TransferFilter.token_id:type_name -> proto.InternalFilter
	13, // 71: proto.StorageDiffFilter.height:type_name -> proto.IntegerFilter
	16, // 72: proto.StorageDiffFilter.contract:type_name -> proto.StringFilter
	17, // 73: proto.StorageDiffFilter.key:type_name -> proto.EqualityFilter
	16, // 74: proto.TokenBalanceFilter.owner:type_name -> proto.StringFilter
	16, // 75: proto.TokenBalanceFilter.contract:type_name -> proto.StringFilter
	6,  // 76: proto.TokenBalanceFilter.token_id:type_name -> proto.InternalFilter
	77, // [77:77] is the sub-list for method output_type
	77, // [77:77] is the sub-list for method input_type
	77, // [77:77] is the sub-list for extension type_name
	77, // [77:77] is the sub-list for extension extendee
	0,  // [0:77] is the sub-list for field type_name
}

func init() { file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_init() }
func file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_init() {
	if File_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto != nil {
		return
	}
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_filters_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclareFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployAccountFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L1HandlerFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageDiffFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenBalanceFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_goTypes,
		DependencyIndexes: file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_depIdxs,
		MessageInfos:      file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_msgTypes,
	}.Build()
	File_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto = out.File
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_rawDesc = nil
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_goTypes = nil
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_entity_filters_proto_depIdxs = nil
}
