// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: github.com/dipdup-io/starknet-indexer/pkg/grpc/proto/indexer.proto

package pb

import (
	pb "github.com/dipdup-net/indexer-sdk/pkg/modules/grpc/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartBlock uint64       `protobuf:"varint,1,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"`
	Head       bool         `protobuf:"varint,2,opt,name=head,proto3" json:"head,omitempty"`
	Txs        []*TxRequest `protobuf:"bytes,3,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetStartBlock() uint64 {
	if x != nil {
		return x.StartBlock
	}
	return 0
}

func (x *SubscribeRequest) GetHead() bool {
	if x != nil {
		return x.Head
	}
	return false
}

func (x *SubscribeRequest) GetTxs() []*TxRequest {
	if x != nil {
		return x.Txs
	}
	return nil
}

type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response   *pb.SubscribeResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Block      *Block                `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	EndOfBlock bool                  `protobuf:"varint,3,opt,name=end_of_block,json=endOfBlock,proto3" json:"end_of_block,omitempty"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDescGZIP(), []int{1}
}

func (x *Subscription) GetResponse() *pb.SubscribeResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *Subscription) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *Subscription) GetEndOfBlock() bool {
	if x != nil {
		return x.EndOfBlock
	}
	return false
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Height             uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Time               uint64 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	Version            string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	TxCount            uint64 `protobuf:"varint,5,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	InvokesCount       uint64 `protobuf:"varint,6,opt,name=invokes_count,json=invokesCount,proto3" json:"invokes_count,omitempty"`
	DeclaresCount      uint64 `protobuf:"varint,7,opt,name=declares_count,json=declaresCount,proto3" json:"declares_count,omitempty"`
	DeploysCount       uint64 `protobuf:"varint,8,opt,name=deploys_count,json=deploysCount,proto3" json:"deploys_count,omitempty"`
	DeployAccountCount uint64 `protobuf:"varint,9,opt,name=deploy_account_count,json=deployAccountCount,proto3" json:"deploy_account_count,omitempty"`
	L1HandlersCount    uint64 `protobuf:"varint,10,opt,name=l1_handlers_count,json=l1HandlersCount,proto3" json:"l1_handlers_count,omitempty"`
	StorageDiffsCount  uint64 `protobuf:"varint,11,opt,name=storage_diffs_count,json=storageDiffsCount,proto3" json:"storage_diffs_count,omitempty"`
	Status             uint64 `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Hash               []byte `protobuf:"bytes,13,opt,name=hash,proto3" json:"hash,omitempty"`
	ParentHash         []byte `protobuf:"bytes,14,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	NewRoot            []byte `protobuf:"bytes,15,opt,name=new_root,json=newRoot,proto3" json:"new_root,omitempty"`
	SequencerAddress   []byte `protobuf:"bytes,16,opt,name=sequencer_address,json=sequencerAddress,proto3" json:"sequencer_address,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDescGZIP(), []int{2}
}

func (x *Block) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Block) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Block) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Block) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Block) GetTxCount() uint64 {
	if x != nil {
		return x.TxCount
	}
	return 0
}

func (x *Block) GetInvokesCount() uint64 {
	if x != nil {
		return x.InvokesCount
	}
	return 0
}

func (x *Block) GetDeclaresCount() uint64 {
	if x != nil {
		return x.DeclaresCount
	}
	return 0
}

func (x *Block) GetDeploysCount() uint64 {
	if x != nil {
		return x.DeploysCount
	}
	return 0
}

func (x *Block) GetDeployAccountCount() uint64 {
	if x != nil {
		return x.DeployAccountCount
	}
	return 0
}

func (x *Block) GetL1HandlersCount() uint64 {
	if x != nil {
		return x.L1HandlersCount
	}
	return 0
}

func (x *Block) GetStorageDiffsCount() uint64 {
	if x != nil {
		return x.StorageDiffsCount
	}
	return 0
}

func (x *Block) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Block) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Block) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *Block) GetNewRoot() []byte {
	if x != nil {
		return x.NewRoot
	}
	return nil
}

func (x *Block) GetSequencerAddress() []byte {
	if x != nil {
		return x.SequencerAddress
	}
	return nil
}

type TxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invokes []*InvokeFilters `protobuf:"bytes,1,rep,name=invokes,proto3" json:"invokes,omitempty"`
}

func (x *TxRequest) Reset() {
	*x = TxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRequest) ProtoMessage() {}

func (x *TxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRequest.ProtoReflect.Descriptor instead.
func (*TxRequest) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDescGZIP(), []int{3}
}

func (x *TxRequest) GetInvokes() []*InvokeFilters {
	if x != nil {
		return x.Invokes
	}
	return nil
}

type InvokeFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height     *IntegerFilter  `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Time       *TimeFilter     `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Status     *EnumFilter     `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Version    *EnumFilter     `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Contract   *StringFilter   `protobuf:"bytes,5,opt,name=contract,proto3" json:"contract,omitempty"`
	Selector   *EqualityFilter `protobuf:"bytes,6,opt,name=selector,proto3" json:"selector,omitempty"`
	Entrypoint *StringFilter   `protobuf:"bytes,7,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
}

func (x *InvokeFilters) Reset() {
	*x = InvokeFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFilters) ProtoMessage() {}

func (x *InvokeFilters) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFilters.ProtoReflect.Descriptor instead.
func (*InvokeFilters) Descriptor() ([]byte, []int) {
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDescGZIP(), []int{4}
}

func (x *InvokeFilters) GetHeight() *IntegerFilter {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *InvokeFilters) GetTime() *TimeFilter {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *InvokeFilters) GetStatus() *EnumFilter {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *InvokeFilters) GetVersion() *EnumFilter {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *InvokeFilters) GetContract() *StringFilter {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *InvokeFilters) GetSelector() *EqualityFilter {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *InvokeFilters) GetEntrypoint() *StringFilter {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

var File_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto protoreflect.FileDescriptor

var file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDesc = []byte{
	0x0a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x70,
	0x64, 0x75, 0x70, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2d,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x46, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x70, 0x64, 0x75, 0x70, 0x2d, 0x6e,
	0x65, 0x74, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x64, 0x69, 0x70, 0x64, 0x75, 0x70, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e,
	0x65, 0x74, 0x2d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x12, 0x22, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x03, 0x74, 0x78, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x20, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x8c, 0x04, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x65, 0x63, 0x6c, 0x61,
	0x72, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x14, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x6c, 0x31, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6c, 0x31, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x44, 0x69, 0x66, 0x66, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x52,
	0x6f, 0x6f, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x3b, 0x0a, 0x09, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x07, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x73, 0x22, 0xd5, 0x02,
	0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x2c, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2b, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x31, 0x0a,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x33, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x93, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x33, 0x5a, 0x31, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x70, 0x64, 0x75, 0x70,
	0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x6e, 0x65, 0x74, 0x2d, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDescOnce sync.Once
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDescData = file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDesc
)

func file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDescGZIP() []byte {
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDescOnce.Do(func() {
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDescData)
	})
	return file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDescData
}

var file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_goTypes = []interface{}{
	(*SubscribeRequest)(nil),       // 0: proto.SubscribeRequest
	(*Subscription)(nil),           // 1: proto.Subscription
	(*Block)(nil),                  // 2: proto.Block
	(*TxRequest)(nil),              // 3: proto.TxRequest
	(*InvokeFilters)(nil),          // 4: proto.InvokeFilters
	(*pb.SubscribeResponse)(nil),   // 5: proto.SubscribeResponse
	(*IntegerFilter)(nil),          // 6: proto.IntegerFilter
	(*TimeFilter)(nil),             // 7: proto.TimeFilter
	(*EnumFilter)(nil),             // 8: proto.EnumFilter
	(*StringFilter)(nil),           // 9: proto.StringFilter
	(*EqualityFilter)(nil),         // 10: proto.EqualityFilter
	(*pb.UnsubscribeRequest)(nil),  // 11: proto.UnsubscribeRequest
	(*pb.UnsubscribeResponse)(nil), // 12: proto.UnsubscribeResponse
}
var file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_depIdxs = []int32{
	3,  // 0: proto.SubscribeRequest.txs:type_name -> proto.TxRequest
	5,  // 1: proto.Subscription.response:type_name -> proto.SubscribeResponse
	2,  // 2: proto.Subscription.block:type_name -> proto.Block
	4,  // 3: proto.TxRequest.invokes:type_name -> proto.InvokeFilters
	6,  // 4: proto.InvokeFilters.height:type_name -> proto.IntegerFilter
	7,  // 5: proto.InvokeFilters.time:type_name -> proto.TimeFilter
	8,  // 6: proto.InvokeFilters.status:type_name -> proto.EnumFilter
	8,  // 7: proto.InvokeFilters.version:type_name -> proto.EnumFilter
	9,  // 8: proto.InvokeFilters.contract:type_name -> proto.StringFilter
	10, // 9: proto.InvokeFilters.selector:type_name -> proto.EqualityFilter
	9,  // 10: proto.InvokeFilters.entrypoint:type_name -> proto.StringFilter
	0,  // 11: proto.IndexerService.Subscribe:input_type -> proto.SubscribeRequest
	11, // 12: proto.IndexerService.Unsubscribe:input_type -> proto.UnsubscribeRequest
	1,  // 13: proto.IndexerService.Subscribe:output_type -> proto.Subscription
	12, // 14: proto.IndexerService.Unsubscribe:output_type -> proto.UnsubscribeResponse
	13, // [13:15] is the sub-list for method output_type
	11, // [11:13] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_init() }
func file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_init() {
	if File_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto != nil {
		return
	}
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_filters_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_goTypes,
		DependencyIndexes: file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_depIdxs,
		MessageInfos:      file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_msgTypes,
	}.Build()
	File_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto = out.File
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_rawDesc = nil
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_goTypes = nil
	file_github_com_dipdup_io_starknet_indexer_pkg_grpc_proto_indexer_proto_depIdxs = nil
}
